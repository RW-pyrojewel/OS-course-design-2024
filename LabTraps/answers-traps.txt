1. 哪些寄存器包含函数的参数？例如，在main调用printf时，哪个寄存器保存13？
答：通用寄存器组【包括an（n=0,1,2...）】包含函数的参数。在main调用printf时，寄存器a2保存13。

2. 在main的汇编代码中对函数f的调用在哪里？函数g的调用在哪里？（提示：编译器可以内联函数）
答：编译器通过内联函数的策略，在编译阶段就计算出f(8)+1的值，所以汇编代码中main函数并没有调用f，而是把f(8)+1的结果12作为常数直接加载到通用寄存器里。类似地，f函数也不直接调用g，而是复制了g的汇编代码（因为f中只有一句"return g(x);"）。

3. 函数printf位于什么地址？
答：位于0x630。

4. 在main中调用printf后ra寄存器中的值是什么？
答：在main中调用printf后ra寄存器中的值是0x38（查阅xv6 book第四章可知jalr指令把返回地址PC+4存放在ra中，故得0x34+0x4=0x38）。

5. 运行以下代码。输出是什么? （输出取决于RISC-V是小端制的这一事实。如果RISC-V是大端的，你会把它设置成什么，以产生相同的输出？您需要将57616更改为不同的值吗？）
答：输出是He110 World。如果RISC-V是大端的，则第一个参数仍为57616（因为它小于一个字节），第二参数改为0x726c64（因为它占3个字节，需要把各字节反过来存放）。

6. 在下面的代码中，在'y='之后会输出什么？（注：答案不是一个具体的值。）为什么会发生这种情况？
答：在'y='之后会输出寄存器a2中保存的数，而这个数不可预知，因为printf调用时并未传入第二个参数。